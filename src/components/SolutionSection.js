import React, { useState, useEffect, useRef } from 'react';

const SolutionSection = () => {
  const [activeStep, setActiveStep] = useState(0);
  const [isVisible, setIsVisible] = useState(false);
  const sectionRef = useRef(null);

  const steps = [
    {
      id: 1,
      title: "–°–æ–∑–¥–∞–Ω–∏–µ",
      subtitle: "–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–µ–≥–æ –¶–∏—Ñ—Ä–æ–≤–æ–≥–æ –î–≤–æ–π–Ω–∏–∫–∞",
      description: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–¥–æ–≤—ã–µ AI-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≥–ª—è–¥–∏—Ç, –≥–æ–≤–æ—Ä–∏—Ç –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç –∫–∞–∫ –≤—ã.",
      icon: "üß†",
      color: "from-blue-500 to-purple-600"
    },
    {
      id: 2,
      title: "–ó–∞—â–∏—Ç–∞",
      subtitle: "–ó–∞–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ —Å –ú–∞—Å—Ç–µ—Ä-NFT",
      description: "–ü—Ä–æ–π–¥–∏—Ç–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –ª–∏—á–Ω–æ—Å—Ç–∏ (KYC) –∏ –∑–∞–∫—Ä–µ–ø–∏—Ç–µ —Å–≤–æ–µ –ø—Ä–∞–≤–æ –Ω–∞ –æ–±—Ä–∞–∑ –≤ –≤–∏–¥–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ú–∞—Å—Ç–µ—Ä-NFT –≤ –±–ª–æ–∫—á–µ–π–Ω–µ. –≠—Ç–æ –≤–∞—à–µ —Ü–∏—Ñ—Ä–æ–≤–æ–µ —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏.",
      icon: "üõ°Ô∏è",
      color: "from-purple-500 to-pink-600"
    },
    {
      id: 3,
      title: "–ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è",
      subtitle: "–û—Ç–∫—Ä–æ–π—Ç–µ –Ω–æ–≤—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–æ—Ö–æ–¥–∞",
      description: "–õ–∏—Ü–µ–Ω–∑–∏—Ä—É–π—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –≤–∞—à–∏–º AI-–¥–≤–æ–π–Ω–∏–∫–æ–º, –Ω–∞ –Ω–∞—à–µ–º –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–µ, –ø—Ä–∏–Ω–∏–º–∞–π—Ç–µ –¥–æ–Ω–∞—Ç—ã –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏. –í—Å–µ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ.",
      icon: "üí∞",
      color: "from-yellow-500 to-orange-600"
    }
  ];

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setIsVisible(true);
        }
      },
      { threshold: 0.3 }
    );

    if (sectionRef.current) {
      observer.observe(sectionRef.current);
    }

    return () => observer.disconnect();
  }, []);

  useEffect(() => {
    if (isVisible) {
      const interval = setInterval(() => {
        setActiveStep((prev) => (prev + 1) % steps.length);
      }, 3000);

      return () => clearInterval(interval);
    }
  }, [isVisible, steps.length]);

  return (
    <section id="solution" ref={sectionRef} className="py-20 bg-dark-bg">
      <div className="container mx-auto px-6">
        <div className="text-center mb-16">
          <h2 className="text-4xl md:text-5xl font-bold mb-6">
            <span className="text-white">–ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞</span>{' '}
            <span className="text-purple-primary">Aeterna</span>
          </h2>
          <p className="text-xl text-gray-300 max-w-3xl mx-auto">
            –í–∞—à–∞ —Ü–∏—Ñ—Ä–æ–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è, –∑–∞—â–∏—Ç—ã –∏ –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏ –≤–∞—à–µ–π –ª–∏—á–Ω–æ—Å—Ç–∏ –≤ —ç–ø–æ—Ö—É –ò–ò
          </p>
        </div>

        {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è —Å—Ö–µ–º–∞ */}
        <div className="max-w-6xl mx-auto">
          <div className="flex flex-col lg:flex-row items-center justify-between space-y-8 lg:space-y-0 lg:space-x-8">
            {steps.map((step, index) => (
              <div key={step.id} className="flex-1 relative">
                {/* –°–æ–µ–¥–∏–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ª–∏–Ω–∏—è */}
                {index < steps.length - 1 && (
                  <div className="hidden lg:block absolute top-1/2 -right-4 w-8 h-0.5 bg-gradient-to-r from-purple-primary to-transparent transform -translate-y-1/2 z-10">
                    <div 
                      className={`h-full bg-gradient-to-r from-purple-primary to-yellow-accent transition-all duration-1000 ${
                        isVisible && activeStep >= index ? 'w-full' : 'w-0'
                      }`}
                    ></div>
                  </div>
                )}

                {/* –ö–∞—Ä—Ç–æ—á–∫–∞ —à–∞–≥–∞ */}
                <div 
                  className={`bg-dark-card rounded-2xl p-8 border-2 transition-all duration-500 cursor-pointer transform hover:scale-105 ${
                    activeStep === index 
                      ? 'border-purple-primary shadow-lg shadow-purple-primary/25' 
                      : 'border-gray-700 hover:border-purple-primary/50'
                  }`}
                  onClick={() => setActiveStep(index)}
                >
                  {/* –ò–∫–æ–Ω–∫–∞ */}
                  <div className={`w-20 h-20 rounded-2xl bg-gradient-to-br ${step.color} flex items-center justify-center text-3xl mb-6 mx-auto transform transition-transform duration-300 ${
                    activeStep === index ? 'scale-110' : 'scale-100'
                  }`}>
                    {step.icon}
                  </div>

                  {/* –ù–æ–º–µ—Ä —à–∞–≥–∞ */}
                  <div className="text-center mb-4">
                    <span className="inline-block w-8 h-8 bg-purple-primary rounded-full text-white font-bold flex items-center justify-center text-sm">
                      {step.id}
                    </span>
                  </div>

                  {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
                  <h3 className="text-2xl font-bold text-white mb-2 text-center">
                    {step.title}
                  </h3>

                  {/* –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
                  <h4 className="text-lg font-semibold text-purple-primary mb-4 text-center">
                    {step.subtitle}
                  </h4>

                  {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
                  <p className="text-gray-300 text-center leading-relaxed">
                    {step.description}
                  </p>
                </div>
              </div>
            ))}
          </div>

          {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ */}
          <div className="flex justify-center mt-12 space-x-3">
            {steps.map((_, index) => (
              <button
                key={index}
                onClick={() => setActiveStep(index)}
                className={`w-3 h-3 rounded-full transition-all duration-300 ${
                  activeStep === index 
                    ? 'bg-purple-primary scale-125' 
                    : 'bg-gray-600 hover:bg-gray-500'
                }`}
              />
            ))}
          </div>
        </div>
      </div>
    </section>
  );
};

export default SolutionSection;
